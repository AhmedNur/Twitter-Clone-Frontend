{"ast":null,"code":"import { BehaviorSubject } from \"rxjs\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nexport let AuthenticationService = /*#__PURE__*/(() => {\n  class AuthenticationService {\n    constructor(http, router) {\n      this.http = http;\n      this.router = router;\n      this.authenticated = new BehaviorSubject(false);\n      this.userDetails = new BehaviorSubject(null);\n      this.isLoaded = false;\n      this.badCredentials = false;\n      this.usernameTaken = false;\n      this.tagTaken = false;\n    }\n\n    authenticate(username, password) {\n      let formData = new FormData();\n      formData.append('username', username);\n      formData.append('password', password);\n      this.http.post(\"https://165.227.40.250:443/api/authenticate\", formData, {\n        responseType: 'text',\n        observe: \"response\"\n      }).subscribe(resp => {\n        this.updateUserData();\n        location.reload();\n      }, () => {\n        this.badCredentials = true;\n      });\n    }\n\n    register(username, password, displayName, tag) {\n      this.usernameTaken = false;\n      this.tagTaken = false;\n      let formData = new FormData();\n      formData.append('username', username);\n      formData.append('tag', tag);\n      formData.append('displayName', displayName);\n      formData.append('password', password);\n      return this.http.post('https://165.227.40.250:443/api/register', formData);\n    }\n\n    logout() {\n      this.http.get('https://165.227.40.250:443/api/logout').subscribe(() => {\n        location.reload();\n      });\n    }\n\n    updateUserData() {\n      return this.http.get(\"https://165.227.40.250:443/api/me\", {\n        responseType: \"json\"\n      });\n    }\n\n  }\n\n  AuthenticationService.ɵfac = function AuthenticationService_Factory(t) {\n    return new (t || AuthenticationService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.Router));\n  };\n\n  AuthenticationService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthenticationService,\n    factory: AuthenticationService.ɵfac,\n    providedIn: 'root'\n  });\n  return AuthenticationService;\n})();","map":null,"metadata":{},"sourceType":"module"}